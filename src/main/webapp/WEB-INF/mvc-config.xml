<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   <mvc:annotation-driven >
   		<!-- podrška za asinhrono opsluživanje zahtjeva (npr. streaming, asinhroni kontroleri itd.) -->
   		<!-- koliko max. traje ainhrono procesiranje -->
   		<mvc:async-support default-timeout="3600000" task-executor="taskExecutor"/>
   		
   		<!-- Automatska konverzija objekata u JSON (Restful WS) -->
   		<mvc:message-converters>
   			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
   		</mvc:message-converters> 
   </mvc:annotation-driven>
   
   <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
   		<property name="corePoolSize" value="5" />
   		<property name="maxPoolSize" value="20" />
   		<property name="keepAliveSeconds" value="3600000" />
   </bean>
   
   <context:component-scan base-package="ba.pehli.facebook.controller" />
   
   <!-- Radi efikasnosti želimo da svim statičkim resursima upravlja Default handler (a ne DS) -->
   <!-- U pogledima moramo koristiti <spring:url> tag -->
   
   <mvc:resources location="/static/" mapping="/res/**">
   		<mvc:cache-control max-age="864000" cache-public="true" />
   	</mvc:resources>
   <mvc:default-servlet-handler/>  
   
   <!-- Interceptor koji postavlja na svaku stranicu globalne objekte (preko sesije) --> 
   <mvc:interceptors>
   		<mvc:interceptor>
   			<mvc:mapping path="/**"/>
    		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
    			<property name="paramName" value="lang" />
    		</bean>
    	</mvc:interceptor>
    	<mvc:interceptor>
    		<mvc:mapping path="/**"/>
    		<mvc:exclude-mapping path="/login"/>
    		<mvc:exclude-mapping path="/register"/>
    		<bean class="ba.pehli.facebook.interceptor.GlobalAttributesInterceptor"/>
    	</mvc:interceptor>
   </mvc:interceptors>
   
   <!-- Internacionalizacija -->
   <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
   		<property name="cookieName" value="userLanguage" />
   		<property name="cookieMaxAge" value="-1" /> <!-- izbriši nakon gašenja browsera -->
   </bean>
	
	<!-- Apache Tiles konfiguracija -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	        <property name="order" value="0"/>
	</bean>
	
	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layouts.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- Jasper izvještaji -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>
	
	<bean id="reportTemplate" class="org.springframework.web.servlet.view.jasperreports.JasperReportsPdfView" abstract="true">
		<property name="reportDataKey" value="dataSource" />
		<!--  <property name="subReportDataKeys" value="subReportDataSource" /> -->
	</bean>
	
	<bean id="postReport" parent="reportTemplate">
		<property name="url" value="/WEB-INF/reports/post-report.jrxml"/>	
		<property name="subReportUrls">
			<map>
				<entry key="subReport" value="/WEB-INF/reports/post-subreport.jrxml"></entry>
			</map>
		</property>
	</bean>
	
	<!-- File upload -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</bean>
	
	<!-- Web Socket -->
	<websocket:message-broker application-destination-prefix="/">
		<websocket:stomp-endpoint path="/ws">	<!-- klijent se konektuje na ovu adresu -->
			<websocket:sockjs />
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/topic"/> <!-- server na ovoj adresi kreira teme -->
	</websocket:message-broker>

</beans>
